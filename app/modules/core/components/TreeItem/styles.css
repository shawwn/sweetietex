.tree {
  display: block;
  width: 100%;
}

.levelItems {
  display: flex;
  height: 24px;
}

.item {
  display: initial;
  height: 24px;
}

.childContainer {
  display: block;
  width: 100%;
  padding-left: 16px;
}

.checkContainer {
  height: 16px;
}

.checkbox {
  margin: 0 0 0 0;
}

.arrowContainer {
  display: inline-block;
}

.arrow {
  display: inline-block;
  outline: none;
  border: 0;
  cursor: pointer;
  height: 16px;
  width: 16px;
  background-image: url('../../../../assets/images/arrow_left.svg');
  background-size: 24px 24px;
  background-position: center center;
  background-repeat: no-repeat;
  transition: transform 0.2s;
  transform: rotate(0deg);
}

.arrow.expanded {
  transform: rotate(-90deg);
}

.label {
  color: rgb(32, 40, 36);
  display: inline-block;
  vertical-align: top;
}

.customContainer {
  display: block;
  position: relative;
  padding-left: 16px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.customContainer input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 16px;
  width: 16px;
  background-color: #eee;
  border: 1px solid rgb(44, 60, 64);
}

/* On mouse-over, add a grey background color */
.customContainer:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.customContainer input:checked ~ .checkmark {
  background-color: rgb(42, 152, 211);
  border: 1px solid rgb(42, 152, 211);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark::after {
  content: "";
  position: absolute;
  display: none;
}

/* Style the checkmark/indicator */
.customContainer .checkmark::after {
  left: 5px;
  top: 2px;
  width: 4px;
  height: 8px;
  border: solid white;
  border-width: 0 2px 2px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/* Show the checkmark when checked */
.customContainer input:checked ~ .checkmark::after {
  display: block;
}
